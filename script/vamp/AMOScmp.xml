<tool id='amoscmp' name='Reference-guided Scaffolding' version="3.1.0">
<command interpreter="python"> AMOScmp.py -c $cinput -f $finput -o draft_genome
				#if $pinput
					-p $pinput
				#end if
				</command>

 <inputs>
	<param type="data" format="fasta" name="cinput" label="Contig file" />
	<param type="data" format="fasta,fastq" name="pinput" optional="true" label="Paired-end sequence" />
	<param type="data" format="fasta" name="finput" label="Reference sequence"/>
 </inputs>

 <outputs>
	<data name="output" format="fasta" label="draft genome on ${on_string}.fa" from_work_dir="draft_genome.fasta"/>
 </outputs>

 <help>

**What Reference-guided Scaffolding does**

Reference-guided Scaffolding is performed using AMOScmp, a comparative assembler that can assemble a set of shotgun reads from an organism using the orienting information from a related organism.  AMOScmp transforms the traditional overlap-layout-consensus approach to alignment-layout-consensus, which significantly increase the assembly efficiency.  The underline mapping engine of AMOS is MUMmer package, then the layout step is designed to take into the account of polymorphisms between two genome.

In our pipeline, this step uses contigs as input instead of shotgun sequences, to keep most variation out of the sequencing data

**What to input**

For minimum, one FASTA file containing contigs assembled from de novo assemblers and a reference genome in FATSA format is required.

A dataset of pair-end read information is also encouraged, which will further help orient and bridge the contigs.

**Reference**  

"Comparative Genome Assembly." Pop M, Phillippy A, Delcher AL, Salzberg SL, Briefings in Bioinformatics, 2004. 5(3):237-48.

 </help>

</tool>
